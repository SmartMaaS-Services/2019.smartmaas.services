version: "3.5"

services:

    quantumleapcrate:
        image: crate:3.1.2
        #iimage: crate:2.3
            # Admin UI
        ports:            
            - "4200:4200"
            # Transport protocol
            # - "4300:4300"
        command: crate  -Clicense.enterprise=false -Cauth.host_based.enabled=false -Ccluster.name=democluster -Chttp.cors.enabled=true -Chttp.cors.allow-origin="*" -Cnetwork.bind_host=0.0.0.0 -Cnetwork.publish_host=_site_
        healthcheck:
            # disable: true
            test: ["CMD", "curl", "--fail", "--max-time", "25", "http://localhost:4200"]
            interval: 30s
            timeout: 30s
            retries: 3
            start_period: 40s
        volumes:
            - /opt/quantumleap-crate:/data
        networks:
            - quantumleap
        deploy:
            replicas: 1
            placement:
                constraints:
                    - node.hostname == 2019-manager
            restart_policy:
                condition: any

    quantumleap_redis:
        image: redis
            # - "6379:6379"
        volumes:
            - /opt/quantumleap-redis:/data
        networks:
            - quantumleap
        deploy:
            # Scaling Redis requires some extra work.
            # See https://get-reddie.com/blog/redis4-cluster-docker-compose/
            replicas: 1
            placement:
                constraints:
                    - node.hostname == 2019-manager
            restart_policy:
                condition: any

    quantumleap:
        image: smartsdk/quantumleap:0.7.5
            # ports
            #Â "8668:8668"
        depends_on:
            - quantumleapcrate
              #volumes:
              #- /opt/APInf-Cloud-Tampere/config/crate.py:/src/ngsi-timeseries-api/src/translators/crate.py:ro
        environment:
            - CRATE_HOST=quantumleapcrate
            - USE_GEOCODING=True
              #- REDIS_HOST=quantumleap_redis
        networks:
            quantumleap:
            front:
                aliases:
                    - quantumleap.docker
        logging:
            driver: "json-file"
            options:
                max-size: "400m"
                max-file: "10"
        deploy:
            replicas: 1
            placement:
                constraints:
                    - node.hostname == 2019-manager
            restart_policy:
                condition: any


networks:

    front:
        driver: overlay
        ipam:
            config:
                - subnet: 172.40.0.0/16

    quantumleap:
        driver: overlay
        ipam:
            config:
                - subnet: 172.45.0.0/16
